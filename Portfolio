import streamlit as st
import info
import pandas as pd

#About Me
def aboutMe():
    st.header("About Me")
    st.image(info.profile_picture, width = 200)
    st.write(info.about_me)
    st.write('---')
aboutMe()

#SideBar
def links():
    st.sidebar.header("Links")
    st.sidebar.text("Connect with me on LinkedIn")
    linkedinLink = f'<a href= "{info.my_linkedin_url}"><img src "{info.linkedin_image_url}" alt = "LinkedIn" width = "75" height = "75"></a>'
    st.sidebar.markdown(linkedinLink, unsafe_allow_html = True)

    st.sidebar.text("Check out my Github")
    linkedinLink = f'<a href= "{info.my_github_url}"><img src "{info.github_image_url}" alt = "LinkedIn" width = "75" height = "75"></a>'
    st.sidebar.markdown(linkedinLink, unsafe_allow_html = True)

    st.sidebar.text("Contact with me through email!")
    linkedinLink = f'<a href= "{info.my_email_address}"><img src "{info.email_image_url}" alt = "LinkedIn" width = "75" height = "75"></a>'
    st.sidebar.markdown(linkedinLink, unsafe_allow_html = True)
links()

#Education
def education(education_data, course_data):
    st.header("Education")
    st.subheader(f**'{education_data["Institution"]}**')
    st.write(f**'Degree:**{education_data["Degree"]}')
    st.write(f**'Graduation Date:**{education_data["Graduation Date"]}')
    st.write(f**'GPA:**{education_data["DegGPAree"]}')
    st.wrtite(f"**Relevant Coursework:**")
    courseWork = pd.DataFrame(course_data)
    st.dataframe(courseWork, ColumnnConfig = {
        "code": "Course Code",
        "names": "Course Names",
        "semesterTaken": "SemesterTaken",
        "skills": "What I Learned"},
        hide_index = True,
        )
    st.write("---")
education(info.education_data, info.course_data)

#Proffessional Experince
def experince(experience_data):
    st.header("Professional Experince")
    for job_title, (job_description, image) in experience_data.items():
        expander = st.expander(f"{job_title}")
        expander.image(image, width = 250)
        for bullet in job_description:
            expander.write(bullet)
        st.write("---")
experince(info.experience_data)

#Projects
def projects(projects_data):
    st.header("Projects")
    for project_name, project_description in projects_data.items():
        expander = st.expander(f"{project_name}")
        expander.write(project_description)
    st.write("---")
projects(info.projects_data)

#Skills
def skills(programming_data, spoken_data):
    st.header("Skills")
    st.subheader("Programming Languages")
    for skill, percentage in programming_data.items():
        st.write(f"{skill}{info.programming_icons.get(skill, "")}")
        st.progress(percentage)
    st.subheader("Spoken Languages")
    for spoken, proficiency in spoken_data.items():
        st.write(f"{spoken}{info.spoken_icons.get(spoken, "")}: {proficiency}")
    st.write("---")
skills(info.programming_data, info.spoken_data)

#Activites
def activites(leadership_data, activity_data):
    st.header("Activities")
    tab1, tab2 = st.tabs(["leadership", "Community Service"])
    with tab1:
        st.subheader("Leadership")
        for title, (details. image) in leadership_data.items():
            expander = st.expander(f"{title}")
            expander.image(image, width = 250)
            for bullet in details:
                expander.write(bullet)
    with tab2:
        st.subheader("Community Service")
        for title, details in activity_data.items():
            expander = st.expander(f"{title}")
            for bullet in details:
                expander.write(bullet)
    st.write("---")
activites(info.leadership_data, info.activity_data)
